<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Etape">

	<cacheModel id="cacheEtape" type="OSCACHE" readOnly="true">
		<flushInterval hours="12"/>
		<property name="cache-size" value="50"/>
	</cacheModel>

	<typeAlias alias="ClassEtape" type="org.esupportail.pstagedata.domain.beans.Etape"/>
	<resultMap id="Etape"
		class="ClassEtape">
		<result property="code" column="codeEtape" />
		<result property="codeVersionEtape" column="codeVersionEtape" />
		<result property="libelle" column="libelleEtape" />
		<result property="codeUniversite" column="codeUniversite" />
	</resultMap>

	<statement id="getEtapes" resultMap="Etape" cacheModel="cacheEtape">
		SELECT * FROM Etape
		<dynamic prepend="WHERE">
			<isNotNull property="codeUniversite">
				codeUniversite = #codeUniversite#
			</isNotNull>
		</dynamic>
	</statement>
	
	<statement id="getEtapesFromIdsCentreGestion" resultMap="Etape" cacheModel="cacheEtape">
		SELECT DISTINCT E.*
		FROM Etape E
		INNER JOIN Convention C ON E.codeEtape = C.codeEtape AND 
		      ( (E.codeVersionEtape = C.codeVersionEtape AND C.codeVersionEtape!='' AND E.codeVersionEtape!='') OR 
		        (C.codeVersionEtape != '' AND E.codeVersionEtape = '') OR
		        (C.codeVersionEtape = '' AND E.codeVersionEtape != '') OR
		        (C.codeVersionEtape = '' AND E.codeVersionEtape = '') )
		INNER JOIN CentreGestion CG ON C.idCentreGestion = CG.idCentreGestion
		<dynamic prepend="WHERE">
			<isNotNull property="codeUniversite" prepend="AND">
				E.codeUniversite = #codeUniversite#
			</isNotNull>
			<isNotNull property="anneeUniv" prepend="AND">
				C.annee = #anneeUniv#
			</isNotNull>
			<isNotNull property="idsCG">
				<iterate prepend="AND" property="idsCG" conjunction="OR" open="(" close=")">
					C.idCentreGestion = #idsCG[]#
				</iterate>
			</isNotNull>
		</dynamic>
	</statement>
	
	<statement id="getEtapeFromId" resultMap="Etape" cacheModel="cacheEtape">
		SELECT * FROM Etape
		WHERE codeEtape = #code#
		<isNotNull property="codeVersionEtape" prepend="AND">
			codeVersionEtape = #codeVersionEtape#
		</isNotNull>
		<isNotNull property="codeUniversite" prepend="AND">
			codeUniversite = #codeUniversite#
		</isNotNull>
		LIMIT 0, 1
	</statement>

	<insert id="addEtape" >
        INSERT INTO Etape (codeEtape,codeVersionEtape, libelleEtape, codeUniversite)
		VALUES (#code#, #codeVersionEtape#, #libelle#, #codeUniversite#);
		<selectKey resultClass="java.lang.Integer">
			SELECT LAST_INSERT_ID()
     	</selectKey>
   </insert>
</sqlMap>