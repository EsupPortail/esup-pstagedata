<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Service">

	<cacheModel id="cacheService" type="OSCACHE" readOnly="true">
		<flushInterval hours="12"/>
		<property name="cache-size" value="50"/>
	</cacheModel>

	<typeAlias alias="ClassService" type="org.esupportail.pstagedata.domain.beans.Service"/>
	
	<resultMap id="Service"
		class="ClassService">
		<result property="idService" column="idService" />
		<result property="idStructure" column="idStructure" />
		<result property="nom" column="nom" />
		<result property="batimentResidence" column="batimentResidence" />
		<result property="voie" column="voie" />
		<result property="commune" column="commune" />
		<result property="codeCommune" column="codeCommune" />
		<result property="codePostal" column="codePostal" />
		<result property="idPays" column="idPays" />
		<result property="dateCreation" column="dateCreation" />
		<result property="loginCreation" column="loginCreation" />
		<result property="dateModif" column="dateModif" />
		<result property="loginModif" column="loginModif" />
		<result property="infosAJour" column="infosAJour" />
		<result property="loginInfosAJour" column="loginInfosAJour" />
		<result property="telephone" column="telephone" />
	</resultMap>
	
	<resultMap id="ServiceExport"
		class="ClassService">
		<result property="idService" column="idService" />
		<result property="nom" column="nom" />
		<result property="batimentResidence" column="batimentResidence" />
		<result property="voie" column="voie" />
		<result property="commune" column="commune" />
		<result property="codeCommune" column="codeCommune" />
		<result property="codePostal" column="codePostal" />
		<result property="idPays" column="idPays" />
		<result property="telephone" column="telephone" />
	</resultMap>

	<statement id="getServiceFromId" resultMap="Service" cacheModel="cacheService">
		SELECT * FROM Service
		WHERE idService = #idService#
		LIMIT 0,1
	</statement>
	
	<statement id="getServiceExportFromId" resultMap="ServiceExport" cacheModel="cacheService">
		SELECT S.idService, S.nom, S.batimentResidence,
		S.voie, S.commune, S.codeCommune, S.codePostal, S.idPays, S.telephone
		FROM Service S
		WHERE S.idService = #idService#
		LIMIT 0,1
	</statement>
	<statement id="getServiceFromIdContact" resultMap="Service" cacheModel="cacheService">
		SELECT s.* FROM Service s
		INNER JOIN Contact c ON s.idService=c.idService
		LIMIT 0,1
    </statement>
	<statement id="getServicesFromIdStructure" resultMap="Service" cacheModel="cacheService">
		SELECT * FROM Service
		WHERE idStructure = #idStructure#
    </statement>
    
    <statement id="countContactRefOffre" resultClass="java.lang.Integer" cacheModel="cacheService">
    	SELECT COUNT(*) FROM Offre O
		INNER JOIN Structure S ON S.idStructure = O.idStructure
		INNER JOIN Service Se ON Se.idStructure = S.idStructure
		INNER JOIN Contact C ON C.idService = Se.idService
		WHERE (O.idContactCand = C.idContact
		OR O.idContactInfo = C.idContact)
		AND C.idService = #idService#
    </statement>
    
    <statement id="countContactRefConvention" resultClass="java.lang.Integer" cacheModel="cacheService">
    	SELECT COUNT(*) FROM Convention Co
		INNER JOIN Structure S ON S.idStructure = Co.idStructure
		INNER JOIN Service Se ON Se.idStructure = S.idStructure
		INNER JOIN Contact C ON C.idService = Se.idService
		WHERE (Co.idContact = C.idContact
		OR Co.idSignataire = C.idContact)
		AND C.idService = #idService#
    </statement>
    
    <statement id="countContactRefAccord" resultClass="java.lang.Integer" cacheModel="cacheService">
    	SELECT COUNT(*) FROM AccordPartenariat A
		INNER JOIN Service Se ON Se.idStructure = A.idStructure
		INNER JOIN Contact C ON C.idService = Se.idService
		WHERE A.idContact = C.idContact
		AND C.idService = #idService#
    </statement>
    
    <statement id="countContactAvecCompte" resultClass="java.lang.Integer" cacheModel="cacheService">
    	SELECT COUNT(*) FROM Contact C
		INNER JOIN Service Se ON C.idService = Se.idService
		WHERE C.idService = #idService#
		AND C.login IS NOT NULL
		AND C.mdp IS NOT NULL
    </statement>

	<insert id="addService">
		INSERT INTO Service (idStructure, nom, batimentResidence, voie, commune, codeCommune, codePostal,
		idPays, dateCreation, loginCreation, infosAJour, loginInfosAJour, telephone)
		VALUES (#idStructure#, #nom#, #batimentResidence#, #voie#, #commune#, #codeCommune#, #codePostal#,
		#idPays#, CURRENT_TIMESTAMP(), #loginCreation#, CURDATE(), #loginInfosAJour#, #telephone#)
		<selectKey resultClass="java.lang.Integer">
			SELECT LAST_INSERT_ID()
     	</selectKey>
	</insert>

	<update id="updateService">
		UPDATE Service SET nom = #nom#, batimentResidence = #batimentResidence#, voie = #voie#, commune = #commune#,
		codeCommune = #codeCommune#, codePostal=#codePostal#, idPays=#idPays#, dateModif = CURRENT_TIMESTAMP(), loginModif = #loginModif#,
		infosAJour = CURDATE(), loginInfosAJour = #loginInfosAJour#, telephone = #telephone#
		WHERE idService = #idService#
    </update>
    
    <update id="updateServiceInfosAJour">
		UPDATE Service SET infosAJour = CURDATE(), loginInfosAJour = #loginInfosAJour#
		WHERE idService = #idService#
    </update>

	<delete id="deleteService">
		DELETE FROM Service WHERE idService = #idService#
	</delete>

	<delete id="deleteServiceFromIdStructure">
		DELETE FROM Service WHERE idStructure = #idStructure#
	</delete>
</sqlMap>